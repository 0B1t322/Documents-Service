openapi: 3.0.8
info:
  title: Document service API
  description: Document service API
  version: 1.0.0
servers:
    - url: http://localhost:8080/api/documents/v1
      description: local
paths:
  /documents:
    post:
      operationId: createDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: "./schemas/documents.yml#/components/schemas/CreateUpdateDocumentView"
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: "./schemas/documents.yml#/components/schemas/Document"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
      tags:
        - documents
      summary: "Create document"
    get:
      summary: Get documents
      description: Return paginated dto
      tags:
        - documents
      parameters:
        - $ref: "./parameters/shared.yml#/components/parameters/Cursor"
        - $ref: "./parameters/shared.yml#/components/parameters/Limit"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/documents.yml#/components/schemas/PaginatedDocuments"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}:
    get:
      summary: Get document by id
      operationId: getDocumentById
      tags:
        - documents
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/documents.yml#/components/schemas/Document"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    put:
      summary: Update document by id
      operationId: updateDocumentById
      tags:
        - documents
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/documents.yml#/components/schemas/CreateUpdateDocumentView"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/documents.yml#/components/schemas/Document"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/elements:
    post:
      summary: Create structural element in document
      operationId: createElement
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/elements.yml#/components/schemas/CreateUpdateStructuralElement"
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: "./schemas/elements.yml#/components/schemas/StructuralElement"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    get:
      summary: Get structural elements in document
      operationId: getElements
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/shared.yml#/components/parameters/Limit"
        - $ref: "./parameters/shared.yml#/components/parameters/Cursor"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/elements.yml#/components/schemas/PaginatedStructuralElements"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/elements/{seId}:
    delete:
      summary: Delete structural element
      operationId: deleteStructuralElementByID
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/elements.yml#/components/parameters/StructuralElementId"
      responses:
        '204':
          description: Successful deleted
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    put:
      summary: Update structural element
      operationId: updateStructuralElement
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/elements.yml#/components/parameters/StructuralElementId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/elements.yml#/components/schemas/UpdateStyleOfStructuralElement"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/elements.yml#/components/schemas/StructuralElement"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    get:
      summary: Get elements
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/elements.yml#/components/parameters/StructuralElementId"
        - $ref: "./parameters/shared.yml#/components/parameters/Limit"
        - $ref: "./parameters/shared.yml#/components/parameters/Cursor"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/paragraph.yml#/components/schemas/PaginatedParagrahElements"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/elements/{seId}/element/paragraphs:
    post:
      operationId: createParagraphElement
      summary: Create paragraph element
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/elements.yml#/components/parameters/StructuralElementId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/paragraph.yml#/components/schemas/CreateUpdateParagraphElement"
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: "./schemas/paragraph.yml#/components/schemas/ParagraphElement"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/elements/{structuralElementIndex}/paragraphs/elements/{paragraphElementIndex}:
    get:
      description: Get paragraphs elements by indexes
      operationId: getParagraphElementByIndexes
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - name: structuralElementIndex
          in: path
          required: true
          description: Structural element index
          schema:
            type: integer
            format: int
        - name: paragraphElementIndex
          in: path
          required: true
          description: Paragraph element index
          schema:
            type: integer
            format: int
      tags:
        - elements
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/paragraph.yml#/components/schemas/ParagraphElement"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    put:
      description: Update paragraph element by indexes
      operationId: updateParagraphElementByIndexes
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - name: structuralElementIndex
          in: path
          required: true
          description: Structural element index
          schema:
            type: integer
            format: int
        - name: paragraphElementIndex
          in: path
          required: true
          description: Paragraph element index
          schema:
            type: integer
            format: int
      tags:
        - elements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/paragraph.yml#/components/schemas/UpdateParagraphElement"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/paragraph.yml#/components/schemas/ParagraphElement"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/elements/{seId}/element/paragraphs/{elementId}:
    put:
      operationId: updateParagraphElement
      summary: Update paragraph element
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/elements.yml#/components/parameters/StructuralElementId"
        - $ref: "./parameters/elements.yml#/components/parameters/ParagraphElementId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/paragraph.yml#/components/schemas/UpdateParagraphElement"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/paragraph.yml#/components/schemas/ParagraphElement"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    delete:
      operationId: deleteParagraphElement
      summary: Delete paragraph element
      tags:
        - elements
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/elements.yml#/components/parameters/StructuralElementId"
        - $ref: "./parameters/elements.yml#/components/parameters/ParagraphElementId"
      responses:
        '204':
          description: Delete successful
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/styles:
    get:
      summary: Get document styles
      tags:
        - styles
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./schemas/styles.yml#/components/schemas/Style"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    post:
      summary: Create document style
      operationId: createDocumentStyle
      tags:
        - styles
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/styles.yml#/components/schemas/CreateUpdateStyle"
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: "./schemas/styles.yml#/components/schemas/Style"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
  /documents/{id}/styles/{styleId}:
    put:
      summary: Update style by id
      operationId: updateStyleById
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/styles.yml#/components/parameters/StyleId"
      tags:
        - styles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/styles.yml#/components/schemas/CreateUpdateStyle"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "./schemas/styles.yml#/components/schemas/Style"
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
    delete:
      summary: Delete style by id
      operationId: deleteStyleById
      parameters:
        - $ref: "./parameters/documents.yml#/components/parameters/DocumentId"
        - $ref: "./parameters/styles.yml#/components/parameters/StyleId"
      tags:
        - styles
      responses:
        '204':
          description: Delete successfully
        default:
          content:
            application/json:
              schema:
                $ref: "./schemas/shared.yml#/components/schemas/Error"
